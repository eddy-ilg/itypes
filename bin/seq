#!/usr/bin/env python3

import os
import sys
import argparse
from itypes import Sequence, Path


parser = argparse.ArgumentParser(description='Sequence editing tool')

subparsers = parser.add_subparsers(dest='command')
concat_parser = subparsers.add_parser("concat")
concat_parser.add_argument("--discover", action="store_true", help="Search subdirectories for sequences")
concat_parser.add_argument("sequence", nargs="*")
concat_parser.add_argument("--out", required=True, type=str, help="Output sequence")

args = parser.parse_args()

def discover_sequences(path):
    path = Path(path)

    sequences = path.search_files("data.gridseq")

    return sequences

def error(msg):
    sys.stderr.write('ERROR: ' + msg + "\n")
    sys.stderr.flush()
    sys.exit(-1)

if args.command == "concat":
    sequences = args.sequence
    if args.discover:
        sequences += discover_sequences(os.getcwd())

    if len(sequences) is None:
        error("No input sequences")

    print('Working on sequences:')
    for sequence in sequences:
        print(sequence)

    out_seq = Sequence(args.out)
    for index, sequence in enumerate(sequences):
        seq = Sequence(sequence).read()
        out_seq.grid = seq.grid

        for scene in seq.data:
            out_scene = out_seq.data.scene('%04d-%s' % (index, scene.name()))
            for frame in scene:
                out_scene.add(frame)

    out_seq.write()
else:
    error(f"Unknown command type {args.command}")
