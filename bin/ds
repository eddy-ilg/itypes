#!/usr/bin/env python3

import os
import sys
import argparse
from itypes import Dataset, Path


parser = argparse.ArgumentParser(description='Dataset tool')

subparsers = parser.add_subparsers(dest='command')

concat_parser = subparsers.add_parser("concat")
concat_parser.add_argument("--discover", action="store_true", help="Search subdirectories for datasets")
concat_parser.add_argument("dataset", nargs="*")
concat_parser.add_argument("--out", required=True, type=str, help="Output dataset")

print_parser = subparsers.add_parser("print")
print_parser.add_argument("dataset")

args = parser.parse_args()

def discover_datasets(path):
    path = Path(path)

    datasets = path.search_files("data.json")
    return datasets

def error(msg):
    sys.stderr.write('ERROR: ' + msg + "\n")
    sys.stderr.flush()
    sys.exit(-1)

if args.command == "concat":
    datasets = args.dataset
    if args.discover:
        datasets += discover_datasets(os.getcwd())

    if len(datasets) is None:
        error("No input datasets")

    print('Working on datasets:')
    for dataset in datasets:
        print(dataset)

    out_ds = dataset(args.out)
    for index, dataset in enumerate(datasets):
        ds = dataset(dataset).read()
        out_ds.grid = ds.grid

        for scene in ds.data:
            out_scene = out_ds.data.scene('%04d-%s' % (index, scene.name()))
            for frame in scene:
                out_scene.add(frame)

    out_ds.write()
elif args.command == "print":
    ds = Dataset(args.dataset).read()
    print(ds, end='')
else:
    error(f"Unknown command type {args.command}")
